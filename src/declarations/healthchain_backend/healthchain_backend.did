type Time = int;
type Patient = 
 record {
   address: text;
   age: int;
   blood_group: text;
   email: text;
   gender: text;
   height: float64;
   logs: vec MedicalLog;
   name: text;
   patient_id: text;
   phone_number: text;
   registered_on: Time;
   weight: float64;
 };
type Notice = 
 record {
   from: text;
   notice: text;
   time_stamp: Time;
 };
type MedicalLog = 
 record {
   blood_pressure: int;
   pulse_rate: float64;
   spo2: int;
   temperature: float64;
   time_stamp: Time;
 };
type Employee = 
 record {
   contact: text;
   date_of_joining: text;
   email: text;
   employee_id: text;
   first_name: text;
   last_name: text;
   salary: int;
 };
service : {
  createEmployee: (text, text, text, text, text, int, text) -> () oneway;
  createNotice: (text, text) -> () oneway;
  createPatient: (text, text, text, text, int, text, text, float64, float64,
   text, vec MedicalLog) -> () oneway;
  deleteEmployee: (text) -> () oneway;
  readEmployees: () -> (vec Employee) query;
  readNotices: () -> (vec Notice) query;
  readPatients: () -> (vec Patient) query;
  updateEmployee: (text, text, text, text, text, int, text) -> () oneway;
}
